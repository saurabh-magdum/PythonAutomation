{"name": "test_get_product_details", "status": "broken", "statusDetails": {"message": "requests.exceptions.TooManyRedirects: Exceeded 30 redirects.", "trace": "self = <test_orangehrm.TestOrangeHRM object at 0x0000026FF7376380>\n\n    def test_get_product_details(self):\n        \"\"\"Test the API endpoint that provides product (user) details (API Test).\"\"\"\n    \n        # Step 1: Send GET request to the API endpoint with Basic Authentication\n        auth = (TestData.USERNAME, TestData.PASSWORD)  # Basic Auth credentials\n    \n        params = {\n            \"limit\": TestData.API_LIMIT,\n            \"offset\": TestData.API_OFFSET,\n            \"sortField\": TestData.API_SORT_FIELD,\n            \"sortOrder\": TestData.API_SORT_ORDER\n        }\n    \n>       response = requests.get(TestData.API_BASE_URL, params=params, auth=auth)\n\ntests\\test_orangehrm.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\requests\\api.py:73: in get\n    return request(\"get\", url, params=params, **kwargs)\nvenv\\lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:589: in request\n    resp = self.send(prep, **send_kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:724: in send\n    history = [resp for resp in gen]\nvenv\\lib\\site-packages\\requests\\sessions.py:724: in <listcomp>\n    history = [resp for resp in gen]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <requests.sessions.Session object at 0x0000026FF7377EE0>, resp = <Response [302]>, req = <PreparedRequest [GET]>, stream = False, timeout = None, verify = True, cert = None, proxies = OrderedDict(), yield_requests = False\nadapter_kwargs = {}, hist = [<Response [302]>, <Response [302]>, <Response [302]>, <Response [302]>, <Response [302]>, <Response [302]>, ...], url = 'https://opensource-demo.orangehrmlive.com/web/index.php/auth/login'\nprevious_fragment = '', prepared_request = <PreparedRequest [GET]>, parsed = ParseResult(scheme='https', netloc='opensource-demo.orangehrmlive.com', path='/web/index.php/auth/login', params='', query='', fragment='')\npurged_headers = ('Content-Length', 'Content-Type', 'Transfer-Encoding')\n\n    def resolve_redirects(\n        self,\n        resp,\n        req,\n        stream=False,\n        timeout=None,\n        verify=True,\n        cert=None,\n        proxies=None,\n        yield_requests=False,\n        **adapter_kwargs,\n    ):\n        \"\"\"Receives a Response. Returns a generator of Responses or Requests.\"\"\"\n    \n        hist = []  # keep track of history\n    \n        url = self.get_redirect_target(resp)\n        previous_fragment = urlparse(req.url).fragment\n        while url:\n            prepared_request = req.copy()\n    \n            # Update history and keep track of redirects.\n            # resp.history must ignore the original request in this loop\n            hist.append(resp)\n            resp.history = hist[1:]\n    \n            try:\n                resp.content  # Consume socket so it can be released\n            except (ChunkedEncodingError, ContentDecodingError, RuntimeError):\n                resp.raw.read(decode_content=False)\n    \n            if len(resp.history) >= self.max_redirects:\n>               raise TooManyRedirects(\n                    f\"Exceeded {self.max_redirects} redirects.\", response=resp\n                )\nE               requests.exceptions.TooManyRedirects: Exceeded 30 redirects.\n\nvenv\\lib\\site-packages\\requests\\sessions.py:191: TooManyRedirects"}, "description": "Test the API endpoint that provides product (user) details (API Test).", "start": 1728981346323, "stop": 1728981357019, "uuid": "b6aee089-aff3-4f13-be94-8c2c9e996bc4", "historyId": "03d0c48d315cafe86b5486631c25bf86", "testCaseId": "03d0c48d315cafe86b5486631c25bf86", "fullName": "tests.test_orangehrm.TestOrangeHRM#test_get_product_details", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_orangehrm"}, {"name": "subSuite", "value": "TestOrangeHRM"}, {"name": "host", "value": "LAPTOP-2G5H132K"}, {"name": "thread", "value": "17920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_orangehrm"}]}